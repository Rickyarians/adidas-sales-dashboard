---
title: "LBB-IP"
author: "Ricky Ariansyah"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
# clear-up the environment
rm(list = ls())

# chunk options
knitr::opts_chunk$set(
  message = FALSE,
  warning = FALSE,
  fig.align = "center",
  comment = "#>"
)

# Settingan Agar tidak muncul numeric value
options(scipen = 9999)
```

## About this Dataset

An Adidas sales dataset is a collection of data that includes information on the sales of Adidas products. This type of dataset may include details such as the number of units sold, the total sales revenue, the location of the sales, the type of product sold, and any other relevant information.

Adidas sales data can be useful for a variety of purposes, such as analyzing sales trends, identifying successful products or marketing campaigns, and developing strategies for future sales. It can also be used to compare Adidas sales to those of competitors, or to analyze the effectiveness of different marketing or sales channels.

There are a variety of sources that could potentially provide an Adidas sales dataset, including Adidas itself, market research firms, government agencies, or other organizations that track sales data. The specific data points included in an Adidas sales dataset may vary depending on the source and the purpose for which it is being used.

```{r, message=FALSE}
library(readxl)
library(dplyr)
library(lubridate)
library(glue)
library(ggplot2)
library(scales)
library(ggplot2)
library(plotly)
```

```{r}
data <- read_excel('Adidas US Sales Datasets.xlsx', skip = 2)
```

## Kamus Data

Deskripsi kolom:

-   `Retailer`: Nama Retailer
-   `Retailer ID`: ID Retailer
-   `Invoice Date`: Tanggal Invoice
-   `Region`: Wilayah
-   `State`: Negara
-   `City`: Kota
-   `Product`: Nama Produk
-   `Price Per Unit`: Harga per unit
-   `Units Sold`: Total Unit terjual
-   `Total Sales`: Total Sales
-   `Operating Profit`: Operation Profit
-   `Operating Margin`: Operation Margin
-   `Sales Method`: Metode Penjualan

```{r}
glimpse(data)
```
Apa yang perlu dilakukan ?

Perubahan tipe data: 

-   `Retailer`: Nama Retailer -> ubah ke **factor**
-   `Invoice Date`: Tanggal Invoice -> ubah ke **date/datetime**
-   `Region`: Wilayah -> ubah ke factor  **date/datetime**
-   `State`: Negara -> ubah ke **factor**
-   `City`: Kota -> ubah ke **factor**
-   `Product`: Nama Produk -> ubah ke **factor**
-   `Sales Method`: Metode Penjualan ubah ke **factor**

Feature Engineering : 

- Buat Kolom **tahun**


```{r}
anyNA(data)
```

Insight : Tidak Ada data kosong null value

```{r}
# Perubahan tipe data ke factor
data$Retailer <- factor(data$Retailer)
data$`Sales Method` <- factor(data$`Sales Method`)
data$Region <- factor(data$Region)
data$State <- factor(data$State)
data$City <- factor(data$City)
data$City <- factor(data$Product)
```


```{r}
unique(data$Region)
```

```{r}
data_state <- data[data$Region == 'Northeast',]
unique(data[data$Region == 'Northeast',]$State)
```

```{r}
unique(data_state[data_state$State == 'New York',]$City)
```


```{r}
total_data <- data %>% 
      filter(City %in% "Albany")


nrow(total_data)
```


```{r}
glimpse(data)
```

```{r}
glue("Total Retailer : {length(unique(data$Retailer))}")
```

```{r}
glue("Total Metode Sales : {length(unique(data$`Sales Method`))}")
```

```{r}
glue("Total Kategori Produk : {length(unique(data$Product))}")
```


```{r}
data_count <- data %>% group_by(Product) %>% 
  summarise(total_unit_sold = sum(`Units Sold`)) %>% 
  arrange(-total_unit_sold)
```

```{r}


data_count <- data_count %>% 
  mutate(label = glue(
    "Category Product: {Product}
     Total Sales Per Product: {total_unit_sold} Unit"
  ))



plot1 <- ggplot(data = data_count, aes(x = total_unit_sold, 
                              y = reorder(Product, total_unit_sold), # reorder(A, berdasarkan B)
                              text = label,)) + # menambahkan tooltip dari glue
  geom_col(aes(fill = total_unit_sold, )) +
  scale_x_continuous(labels = label_number(big.mark = ".", suffix = " Unit")) + 
  labs(title = "Adidas Unit Sold Per Product Categories",
       x = "Total Unit Sold",
       y = NULL) +
  theme_minimal() +
  theme(legend.position = "none") 

ggplotly(plot1, tooltip = "text")
```


```{r}
market_share <- data %>% group_by(Retailer) %>% 
  summarise(total_sales_retailer = sum(`Total Sales`)) %>% 
  arrange(-total_sales_retailer)
```

```{r}
total_sales <- sum(data$`Total Sales`)
market_share <- market_share %>% 
  mutate(prop = round(total_sales_retailer / sum(total_sales) *100, 2)) 
```


```{r}
ggplot(market_share, aes(x = "", y = prop, fill = Retailer)) +
  geom_col(color = "black") +
  geom_text(aes(label = glue("{prop} %")),
            size = 2.5,
            position = position_stack(vjust = 0.5)) +
  coord_polar(theta = "y") +
  scale_fill_brewer() +
   labs(title = "Market Share Retailer",
       x = "Total Unit Sold",
       y = NULL) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_rect(fill = "#ebf2ff"),
        plot.background = element_rect(fill = "#ebf2ff"),
        legend.background = element_rect(fill = "#ebf2ff"))
```


